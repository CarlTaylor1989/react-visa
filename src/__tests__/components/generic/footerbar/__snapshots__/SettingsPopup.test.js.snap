// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders a closed popup 1`] = `
<Modal
  animationDuration={500}
  blockScroll={true}
  center={true}
  classNames={
    Object {
      "modal": "settingsPopup",
      "overlay": "settingsPopupOverlay",
    }
  }
  classes={
    Object {
      "closeButton": "styles_closeButton__20ID4",
      "closeIcon": "styles_closeIcon__1QwbI",
      "modal": "styles_modal__gNwvD",
      "modalCenter": "styles_modalCenter__L9F2w",
      "overlay": "styles_overlay__CLSq-",
      "transitionEnter": "styles_transitionEnter__3j_-a",
      "transitionEnterActive": "styles_transitionEnterActive___eQs7",
      "transitionExit": "styles_transitionExit__1KmEf",
      "transitionExitActive": "styles_transitionExitActive__1nQXw",
    }
  }
  closeIconSize={28}
  closeIconSvgPath={
    <path
      d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
    />
  }
  closeOnEsc={false}
  closeOnOverlayClick={false}
  container={null}
  focusTrapOptions={Object {}}
  focusTrapped={true}
  onClose={[MockFunction]}
  onExited={[Function]}
  open={false}
  role="dialog"
  showCloseIcon={false}
  styles={Object {}}
>
  <button
    className="exitPopup"
    onClick={[MockFunction]}
    type="button"
  >
    <Translate
      tag="span"
      value="generic.popupCloseBtn"
    />
  </button>
  <div
    className="popupWrapper"
  >
    <div
      className="popupTitle"
    >
      <Translate
        tag="span"
        value="generic.settings.popupTitle"
      />
    </div>
    <div
      className="settings"
    >
      <SettingRow
        buttonLabel=""
        checked={false}
        extraText=""
        handleChange={[MockFunction]}
        handleClick={null}
        hasButton={false}
        hasToggle={true}
        name="audio"
      />
      <SettingRow
        buttonLabel="change"
        checked={false}
        extraText=""
        handleChange={null}
        handleClick={[Function]}
        hasButton={true}
        hasToggle={false}
        name="region"
      />
      <SettingRow
        buttonLabel=""
        checked={false}
        extraText=""
        handleChange={[MockFunction]}
        handleClick={null}
        hasButton={false}
        hasToggle={true}
        name="tooltips"
      />
    </div>
  </div>
</Modal>
`;

exports[`renders an open popup 1`] = `
<Modal
  animationDuration={500}
  blockScroll={true}
  center={true}
  classNames={
    Object {
      "modal": "settingsPopup",
      "overlay": "settingsPopupOverlay",
    }
  }
  classes={
    Object {
      "closeButton": "styles_closeButton__20ID4",
      "closeIcon": "styles_closeIcon__1QwbI",
      "modal": "styles_modal__gNwvD",
      "modalCenter": "styles_modalCenter__L9F2w",
      "overlay": "styles_overlay__CLSq-",
      "transitionEnter": "styles_transitionEnter__3j_-a",
      "transitionEnterActive": "styles_transitionEnterActive___eQs7",
      "transitionExit": "styles_transitionExit__1KmEf",
      "transitionExitActive": "styles_transitionExitActive__1nQXw",
    }
  }
  closeIconSize={28}
  closeIconSvgPath={
    <path
      d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
    />
  }
  closeOnEsc={false}
  closeOnOverlayClick={false}
  container={null}
  focusTrapOptions={Object {}}
  focusTrapped={true}
  onClose={[MockFunction]}
  onExited={[Function]}
  open={true}
  role="dialog"
  showCloseIcon={false}
  styles={Object {}}
>
  <button
    className="exitPopup"
    onClick={[MockFunction]}
    type="button"
  >
    <Translate
      tag="span"
      value="generic.popupCloseBtn"
    />
  </button>
  <div
    className="popupWrapper"
  >
    <div
      className="popupTitle"
    >
      <Translate
        tag="span"
        value="generic.settings.popupTitle"
      />
    </div>
    <div
      className="settings"
    >
      <SettingRow
        buttonLabel=""
        checked={false}
        extraText=""
        handleChange={[MockFunction]}
        handleClick={null}
        hasButton={false}
        hasToggle={true}
        name="audio"
      />
      <SettingRow
        buttonLabel="change"
        checked={false}
        extraText=""
        handleChange={null}
        handleClick={[Function]}
        hasButton={true}
        hasToggle={false}
        name="region"
      />
      <SettingRow
        buttonLabel=""
        checked={false}
        extraText=""
        handleChange={[MockFunction]}
        handleClick={null}
        hasButton={false}
        hasToggle={true}
        name="tooltips"
      />
    </div>
  </div>
</Modal>
`;

exports[`renders an open popup with a selected region 1`] = `
<Modal
  animationDuration={500}
  blockScroll={true}
  center={true}
  classNames={
    Object {
      "modal": "settingsPopup",
      "overlay": "settingsPopupOverlay",
    }
  }
  classes={
    Object {
      "closeButton": "styles_closeButton__20ID4",
      "closeIcon": "styles_closeIcon__1QwbI",
      "modal": "styles_modal__gNwvD",
      "modalCenter": "styles_modalCenter__L9F2w",
      "overlay": "styles_overlay__CLSq-",
      "transitionEnter": "styles_transitionEnter__3j_-a",
      "transitionEnterActive": "styles_transitionEnterActive___eQs7",
      "transitionExit": "styles_transitionExit__1KmEf",
      "transitionExitActive": "styles_transitionExitActive__1nQXw",
    }
  }
  closeIconSize={28}
  closeIconSvgPath={
    <path
      d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
    />
  }
  closeOnEsc={false}
  closeOnOverlayClick={false}
  container={null}
  focusTrapOptions={Object {}}
  focusTrapped={true}
  onClose={[MockFunction]}
  onExited={[Function]}
  open={false}
  role="dialog"
  showCloseIcon={false}
  styles={Object {}}
>
  <button
    className="exitPopup"
    onClick={[MockFunction]}
    type="button"
  >
    <Translate
      tag="span"
      value="generic.popupCloseBtn"
    />
  </button>
  <div
    className="popupWrapper"
  >
    <div
      className="popupTitle"
    >
      <Translate
        tag="span"
        value="generic.settings.popupTitle"
      />
    </div>
    <div
      className="settings"
    >
      <SettingRow
        buttonLabel=""
        checked={false}
        extraText=""
        handleChange={[MockFunction]}
        handleClick={null}
        hasButton={false}
        hasToggle={true}
        name="audio"
      />
      <SettingRow
        buttonLabel="change"
        checked={false}
        extraText="code"
        handleChange={null}
        handleClick={[Function]}
        hasButton={true}
        hasToggle={false}
        name="region"
      />
      <SettingRow
        buttonLabel=""
        checked={false}
        extraText=""
        handleChange={[MockFunction]}
        handleClick={null}
        hasButton={false}
        hasToggle={true}
        name="tooltips"
      />
    </div>
  </div>
</Modal>
`;
