// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the SolutionsPanel component 1`] = `
<div
  className="solutionsPanel"
>
  <div
    className="group"
  >
    <div
      className="info"
    >
      <Translate
        className="title"
        tag="span"
        value="clientprops.solutionsSet.solutionsTitle"
      />
      <Arrows
        direction="bottom"
      />
      <Translate
        className="text"
        tag="span"
        value="clientprops.solutionsSet.solutionsText"
      />
    </div>
    <div
      className="scrollingArea"
    >
      <Scrollbar
        contentProps={Object {}}
        fallbackScrollbarWidth={20}
        maximalThumbYSize={83}
        minimalThumbSize={30}
        minimalThumbYSize={83}
        momentum={true}
        noDefaultStyles={true}
        scrollDetectionThreshold={100}
        scrollerProps={Object {}}
        thumbXProps={Object {}}
        thumbYProps={Object {}}
        trackClickBehavior="jump"
        trackXProps={Object {}}
        trackYProps={Object {}}
        wrapperProps={Object {}}
      >
        <div
          className="solutionsWrapper"
        >
          <Translate
            className="productsTitle"
            tag="span"
            value="clientprops.solutionsSet.productsTitle"
          />
          <Translate
            className="solutionCount"
            selected={0}
            tag="span"
            total={8}
            value="clientprops.solutionsSet.solutionsCount"
          />
          <div
            className="productsList"
          >
            <ProductButton
              client="client1"
              disabled={false}
              id="0"
              isSelected={false}
              key="0"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="1"
              isSelected={false}
              key="1"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="2"
              isSelected={false}
              key="2"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="3"
              isSelected={false}
              key="3"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="4"
              isSelected={false}
              key="4"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="5"
              isSelected={false}
              key="5"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="6"
              isSelected={false}
              key="6"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="7"
              isSelected={false}
              key="7"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
          </div>
        </div>
      </Scrollbar>
    </div>
    <SolutionsInfo
      client="client1"
      closeInfo={[Function]}
      id=""
      showInfo={false}
    />
  </div>
  <button
    className="submitBtn"
    disabled={true}
    onClick={[Function]}
    type="button"
  >
    <Translate
      tag="span"
      value="clientprops.submitBtn"
    />
  </button>
</div>
`;

exports[`renders the SolutionsPanel component without the submit button 1`] = `
<div
  className="solutionsPanel"
>
  <div
    className="group"
  >
    <div
      className="info"
    >
      <Translate
        className="title"
        tag="span"
        value="clientprops.solutionsSet.solutionsTitle"
      />
      <Arrows
        direction="bottom"
      />
      <Translate
        className="text"
        tag="span"
        value="clientprops.solutionsSet.solutionsText"
      />
    </div>
    <div
      className="scrollingArea"
    >
      <Scrollbar
        contentProps={Object {}}
        fallbackScrollbarWidth={20}
        maximalThumbYSize={83}
        minimalThumbSize={30}
        minimalThumbYSize={83}
        momentum={true}
        noDefaultStyles={true}
        scrollDetectionThreshold={100}
        scrollerProps={Object {}}
        thumbXProps={Object {}}
        thumbYProps={Object {}}
        trackClickBehavior="jump"
        trackXProps={Object {}}
        trackYProps={Object {}}
        wrapperProps={Object {}}
      >
        <div
          className="solutionsWrapper"
        >
          <Translate
            className="productsTitle"
            tag="span"
            value="clientprops.solutionsSet.productsTitle"
          />
          <Translate
            className="solutionCount"
            selected={0}
            tag="span"
            total={8}
            value="clientprops.solutionsSet.solutionsCount"
          />
          <div
            className="productsList"
          >
            <ProductButton
              client="client1"
              disabled={false}
              id="0"
              isSelected={false}
              key="0"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="1"
              isSelected={false}
              key="1"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="2"
              isSelected={false}
              key="2"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="3"
              isSelected={false}
              key="3"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="4"
              isSelected={false}
              key="4"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="5"
              isSelected={false}
              key="5"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="6"
              isSelected={false}
              key="6"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
            <ProductButton
              client="client1"
              disabled={false}
              id="7"
              isSelected={false}
              key="7"
              onLearnMore={[Function]}
              onProductChange={[Function]}
              productId="id"
            />
          </div>
        </div>
      </Scrollbar>
    </div>
    <SolutionsInfo
      client="client1"
      closeInfo={[Function]}
      id=""
      showInfo={false}
    />
  </div>
</div>
`;
